@charset "UTF-8";
/*.column {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: 24px;
  &__cat {
    width: 100px;
    height: 100px;
    border: 1px solid;
    background: red;
    box-shadow: 10px 10px 15px -10px;
  }
}

// calcを使用してみよう
.wrapper {
  width: 300px;
  margin: auto;
  .column {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-top: 24px;
  }
}
.column--two .column__cat {
  width: calc(50% - 8px);
}
.column--three .column__cat {
  width: calc((100% / 3) - 8px);
}
.column__cat {
  width: 100px;
  height: 100px;
  border: 1px solid;
  background: red;
  box-shadow: 10px 10px 15px -10px;
}
.column .column__cat {
  margin-right: 8px;
  &:last-child {
    margin: 0;
  }
}

// 丸い要素を作成
.column__cat {
  width: 300px;
  height: 300px;
  border: 1px solid;
  border-radius: 50%;
  background-color: red;
}

// 丸い要素をいろんな場所に作成
.ball__wrap {
  position: relative;
  width: 300px;
  height: 300px;
  border: 1px solid;
  .ball {
    position: absolute;
    width: 150px;
    height: 150px;
    border: 1px solid;
    border-radius: 50%;
    &--one {
      top: 0;
      left: 0;
      background-color: red;
    }
    &--two {
      top: 0;
      right: 0;
      background-color: blue;
    }
    &--three {
      bottom: 0;
      left: 0;
      background-color: yellow;
    }
    &--four {
      bottom: 0;
      right: 0;
      background-color: green;
    }
    &--five {
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: purple;
    }
  }
}

// カード要素を並べる
ul,
li {
  list-style: none;
}
.card-wrap {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  .card {
    border: 1px solid;
    margin-right: 8px;
    margin-bottom: 16px;
    width: calc((100% / 3) - 8px);
    &:nth-child(3n) {
      margin-right: 0;
    }
    &__title {
      font-weight: bold;
      font-size: 16px;
      padding: 8px;
    }
    &__text {
      padding: 10px;
      font-size: 12px;
    }
    &__img {
      width: 100%;
      height: 100px;
      background-color: #0e6edf;
    }
  }
  .dammy {
    border: none;
  }
}

// テキストに三点リーダーを反映
div,
p {
  margin: 0;
  padding: 0;
}
div {
  overflow: hidden;
  p {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }
}

// ドロップキャップを実装
p {
  line-height: 30px;
  &:first-letter {
    font-size: 3em;
    color: blue;
    vertical-align: -10px;
  }
}

// 固定ヘッダーを作成
body {
  overflow-y: scroll;
  height: 2000px;
  background: #ccc;
}
header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  text-align: center;
  padding: 20px 0;
  color: #fff;
  font-size: 20px;
  background-color: #00a2d4;
}

// カルーセルを実装
.wrap {
  background-color: #000;
  overflow-x: scroll;
  overflow-y: hidden;
  white-space: nowrap;
  -webkit-overflow-scrolling: touch;
  .logo {
    display: inline-block;
  }
}

// チェックしたら文字をハイライト化
input:checked + label {
  background: linear-gradient(transparent 70%, yellow 0);
}

// チェックしたら画像を大きく
.img-area {
  background-color: #000;
  display: inline-block;
  img {
    width: 80%;
    display: block;
    margin: auto;
    transition: 1s;
  }
}
input[type="checkbox"] {
  display: none;
  &:checked ~ .img-area img {
    width: 100%;
  }
}

// 文字を最小に
.seven {
  font-size: 10px;
  transform: scale(0.7);
  transform-origin: 0px 0px;
}
.five {
  font-size: 10px;
  transform: scale(0.5);
  transform-origin: 0px 0px;
}

// テーブルの操作
tr,
th,
td {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
body {
  padding: 24px;
}
th:nth-child(1),
td:nth-child(1) {
  background-color: #e7e7e7;
}
td,
th {
  padding: 4px;
}
tbody {
  border: 1px solid;
}
tr {
  border-bottom: 1px solid;
}
tr.borderNon {
  border: none;
}
tr.borderNon td + td {
  border-bottom: 1px solid;
}
tr.borderNon + tr > td {
  position: relative;
  height: 33px;
}
tr.borderNon + tr > td:before {
  content: "カテゴリ";
  position: absolute;
  top: calc(50% - 4px);
  right: -32px;
  transform: translateY(-50%);
}
table tr:last-child {
  border-bottom: none;
}

// ハンバーガーメニューのアイコン
label {
  position: relative;
}
span {
  display: inline-block;
  width: 25px;
  height: 17px;
  i {
    position: absolute;
    width: 100%;
    height: 2px;
    background-color: #000;
    display: block;
    transition: all 0.3s ease-in-out;
    &:nth-child(1) {
      top: 0;
    }
    &:nth-child(2) {
      margin: auto;
      top: 0;
      bottom: 0;
    }
    &:nth-child(3) {
      bottom: 0;
    }
  }
}
input {
  display: none;
  &:checked + label span i:nth-child(1) {
    margin: auto;
    transform: rotate(45deg);
    right: 0;
    bottom: 0;
    left: 0;
    top: 0;
  }
  &:checked + label span i:nth-child(2) {
    transform: rotateX(90deg);
    top: 0;
    bottom: 0;
  }
  &:checked + label span i:nth-child(3) {
    margin: auto;
    transform: rotate(-45deg);
    top: 0;
    right: 0;
    bottom: 0;
  }
}

// アンカーリンクを設定
html {
  scroll-behavior: smooth;
}
body {
  padding: 48px;
}
section {
  margin-bottom: 60px;
}
ul {
  display: flex;
  margin-bottom: 32px;
}
li {
  margin-right: 16px;
  list-style: none;
}
h2 {
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 12px;
}


// タイトル毎に固定ヘッダーを変更
h2 {
  background: blue;
  color: #fff;
  padding: 10px 20px;
  position: sticky;
  top: 0;
}

// 15日〜
// レスポンシブ　PC/SP時の挙動変更
section {
  text-align: center;
}
h1 {
  color: red;
}
.sp-on {
  display: none;
}
.pc-on {
  display: block;
}
@media screen and (max-width: 767px) {
  h1 {
    color: green;
  }
  .sp-on {
    display: block;
  }
  .pc-on {
    display: none;
  }
} 

// レスポンシブの挙動変更
.wrapper {
  overflow-y: auto;
  height: 450px;
}
@media screen and (max-width: 768px) {
  .wrapper {
    width: auto !important;
    height: auto;
  }
}

// レスポンシブ　要素の順番を変える
.card {
  width: 300px;
  margin: auto;
  border: 1px solid #8d8d8d;
  padding: 8px;
  h2 {
    text-align: center;
  }
  &-img {
    width: 100%;
    height: 150px;
    background: red;
    margin: 24px 0;
  }
  &-sentence {
    width: 100%;
  }
}
@media screen and (max-width: 768px) {
  .card {
    display: flex;
    flex-wrap: wrap;
    h2 {
      margin: 0 auto 12px;
      order: 1;
    }
    &-img {
      order: 3;
    }
    &-sentence {
      order: 2;
    }
  }
}

// 円グラフを作成
.radius {
  width: 340px;
  height: 340px;
  background: conic-gradient(red 0% 25%, yellow 25% 50%, blue 50% 100%);
  border-radius: 50%;
}

// 文字色をアニメーションで変化させる
@keyframes changecolor {
  from {
    color: blue;
  }
  to {
    color: red;
  }
}
p {
  animation: changecolor 2s linear 0s 1 forwards;
}

// クリックしたら文字色が変化する
label {
  color: blue;
  transition: all 1s;
}
input:checked + label {
  color: red;
}

// 要素を永遠に回転させる
@keyframes spinbox {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(180deg);
  }
}
div {
  width: 200px;
  height: 100px;
  border: 1px solid #000;
  background-color: red;
  margin-top: 100px;
  animation: spinbox 1s linear 0s infinite forwards;
}

// 背景の画像を固定
.block {
  background-image: url(https://ninjacode.work/assets/img/kv.png);
  position: relative;
  background-attachment: fixed;
  width: 100%;
  height: 1000px;
  &__layer {
    width: 100%;
    height: 1000px;
    background-color: #000;
    opacity: 0.6;
  }
  &__text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    letter-spacing: 20px;
    color: #fff;
    z-index: 1;
  }
}

// sectionを斜めに区切る
body {
  width: 500px;
  margin: auto;
  text-align: center;
}
h1 {
  position: relative;
  font-weight: bold;
  font-size: 24px;
  &::before {
    content: "";
    position: absolute;
    bottom: 10px;
    left: 0;
    width: 100%;
    height: 1px;
    margin: auto;
    background: #fe2e2e;
    transform-origin: bottom;
    transform: rotate(-3deg);
    z-index: -1;
  }
  &::after {
    content: "";
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: 1px;
    margin: auto;
    background: #0e6edf;
    transform-origin: bottom;
    transform: rotate(3deg);
    z-index: -1;
  }
}
h2 {
  text-align: left;
  font-weight: bold;
  font-size: 18px;
}
.section-wrap {
  margin: 24px 0;
  padding: 65px 0;
}
.section {
  position: relative;
  overflow: hidden;
  color: #fff;
  margin: 24px 0;
  padding: 65px 0;
  &--cat1::before {
    background: #0e6edf;
    -ms-transform-origin: left center;
    transform-origin: left center;
    transform: rotate(3deg);
  }
  &--cat2::before {
    background: #fe2e2e;
    transform-origin: right center;
    transform: rotate(-3deg);
  }
}
.section--cat1::before,
.section--cat2::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 120%;
  height: 80%;
  margin: 3% -10% 0;
  z-index: -1;
}

// cssのみでアコーディオン実装
section {
  display: inline-block;
}
.checkbox-input {
  display: none;
}
.checkbox-lavel {
  cursor: pointer;
  display: inline-block;
  padding: 16px;
  background-color: #0e6edf;
  color: #fff;
  &--red {
    background-color: red;
  }
  &--green {
    background-color: green;
  }
  &::before {
    content: "▼";
    padding-right: 4px;
  }
}
.checkbox-input:checked + .checkbox-lavel::before {
  content: "ー";
}
.accordion-cat {
  margin: 0 0 2px 0;
  li {
    max-height: 0;
    overflow-y: hidden;
    transition: all 0.5s;
    text-align: center;
  }
}
.checkbox-input:checked + .checkbox-lavel + .accordion-cat > li {
  max-height: 46px;
  opacity: 1;
  padding: 10px;
  visibility: visible;
}

// マルチボーダーを設定
.background-border {
  width: 500px;
  height: 500px;
  background-color: #0e6edf;
  background-image: linear-gradient(90deg, red 30%, transparent 0%),
    linear-gradient(90deg, blue 30%, transparent 0%),
    linear-gradient(90deg, green 30%, transparent 0%),
    linear-gradient(90deg, white 30%, transparent 0%);
  background-size: 60px, 30px, 50px, 80px;
}

// モーダルの作成
.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  &__content {
    position: absolute;
    overflow: hidden;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 70%;
    height: 400px;
    padding: 10px 30px;
    background-color: #fff;
    &__title {
      padding: 16px;
      text-align: center;
      font-size: 20px;
      font-weight: bold;
    }
    &__img {
      background-color: #000;
      text-align: center;
      width: 100%;
      height: 50%;
      background-image: url(https://ninjacode.work/assets/img/kv.png);
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
    }
    &__discription {
      padding: 24px;
      font-size: 18px;
    }
  }
  &__overlay {
    width: 100%;
    height: 100%;
    background-color: rgba(30, 30, 30, 0.9);
  }
}

// ピタッと止まるスクロールスナップ
div {
  overflow: auto;
  scroll-snap-type: y mandatory;
  height: 100vh;
  .snap-area {
    position: relative;
    scroll-snap-align: start;
    height: 100vh;
    &::before {
      content: "";
      display: inline-block;
      width: 375px;
      height: 200px;
      background-size: cover;
      background-repeat: no-repeat;
      background-image: url(https://ninjacode.work/assets/img/kv.png);
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }
  .snap-area--red {
    background-color: red;
  }
  .snap-area--blue {
    background-color: blue;
  }
  .snap-area--yellow {
    background-color: yellow;
  }
  .snap-area--green {
    background-color: green;
  }
  .snap-area--pink {
    background-color: pink;
  }
}

// 回転文字表記
.calender {
  width: 150px;
  height: 150px;
  margin: auto;
  .part {
    position: absolute;
  }
  &__wrap {
    position: relative;
    width: 100%;
    height: 100%;
    background-color: powderblue;
    &__day {
      font-size: 5.3em;
      font-weight: bold;
      top: 4px;
      left: 4px;
    }
    &__month {
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      font-size: 1.8em;
      font-weight: bold;
    }
    &__year {
      top: 16px;
      right: 0;
      font-size: 1.5em;
      writing-mode: vertical-rl;
      text-orientation: upright;
    }
  }
}

// 四葉のクローバーを実装
.clover-cat {
  display: flex;
  flex-wrap: wrap;
  width: 420px;
  margin: 20px auto;
  span {
    display: inline-block;
    background-color: green;
    margin: 5px;
    width: 200px;
    height: 200px;
  }
  &__part--one {
    border-radius: 50% 50% 0 50%;
  }
  &__part--two {
    border-radius: 50% 50% 50% 0;
  }
  &__part--three {
    border-radius: 50% 0 50% 50%;
  }
  &__part--four {
    border-radius: 0 50% 50% 50%;
  }
}

// 18~
// 縦に回るボックスアニメーション
.box-cat {
  width: 300px;
  color: #fff;
  text-align: center;
  &__tab {
    display: inline-block;
    width: 90px;
    margin-bottom: 55px;
    &:nth-child(1) {
      top: -5px;
      background: green;
    }
    &:nth-child(2) {
      top: 69px;
      background: blue;
    }
    &:nth-child(3) {
      top: 143px;
      background: red;
    }
  }
  &__cube {
    transform-origin: 0 100px;
    transform-style: preserve-3d;
    transition: transform 0.5s ease-in;
  }
  &__tab-content {
    width: 300px;
    height: 200px;
    position: absolute;
    &:nth-child(1) {
      transform: rotateX(-270deg) translateY(-100px);
      transform-origin: top left;
      background: green;
    }
    &:nth-child(2) {
      transform: translateZ(100px);
      background: blue;
    }
    &:nth-child(3) {
      transform: rotateX(-90deg) translateY(100px);
      transform-origin: bottom center;
      background: red;
    }
  }
}
input {
  display: none;
}
p {
  font-size: 25px;
  margin: 75px 0 10px;
  font-weight: 300;
}
#green:checked ~ .box-cat__cube {
  transform: rotateX(-90deg);
}
#blue:checked ~ .box-cat__cube {
  transform: rotateX(0deg);
}
#red:checked ~ .box-cat__cube {
  transform: rotateX(90deg);
}

// ハンバーガーメニュー
body {
  padding: 24px;
}
input {
  display: none;
}
label {
  position: relative;
  float: right;
  clear: both;
}
span {
  display: inline-block;
  width: 35px;
  height: 25px;
  i {
    position: absolute;
    width: 100%;
    height: 2px;
    background-color: #000;
    display: block;
    transition: all 0.3s ease-in-out;
    &:nth-child(1) {
      top: 0;
    }
    &:nth-child(2) {
      margin: auto;
      top: 0;
      bottom: 0;
    }
    &:nth-child(3) {
      bottom: 0;
    }
  }
}
input:checked + label span i:nth-child(1) {
  margin: auto;
  transform: rotate(45deg);
  right: 0;
  bottom: 0;
  left: 0;
  top: 0;
}
input:checked + label span i:nth-child(2) {
  transform: rotateX(90deg);
  top: 0;
  bottom: 0;
}
input:checked + label span i:nth-child(3) {
  margin: auto;
  transform: rotate(-45deg);
  top: 0;
  right: 0;
  bottom: 0;
}
input:checked + label + .ninja__hamburger {
  position: fixed;
  z-index: 99;
  opacity: 1;
}
.ninja__hamburger {
  opacity: 0;
  background-color: rgba(255, 255, 255, 0.7);
  top: 80px;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
  -webkit-transition: opacity 0.3s ease-in-out, z-index 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out, z-index 0.3s ease-in-out;
  &__wrap {
    width: 520px;
    background-color: #000;
    position: absolute;
    right: -100%;
    top: 80px;
    bottom: 0;
    -webkit-transition: right 0.3s ease-in-out;
    transition: right 0.3s ease-in-out;
    overflow-y: scroll;
  }
}
input:checked + label + .ninja__hamburger > .ninja__hamburger__wrap {
  right: 0;
  top: 0;
}
ul {
  margin: 0;
}
li {
  border-bottom: 1px solid #fff;
}
a {
  padding: 0 50px;
  color: #fff;
  font-size: 24px;
  height: 100px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  font-weight: 700;
  line-height: 1;
  transition: background-color 0.3s ease-in-out;
}

// スタンプアニメーションを展開
input {
  display: none;
}
.stamp-box {
  display: inline-flex;
  align-items: center;
  width: 80px;
  height: 80px;
  border: 1px solid;
}
.test {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  background-color: #e4007f;
  width: 50px;
  height: 50px;
  margin: auto;
  border: 1px solid #e4007f;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  color: #000;
  visibility: hidden;
  opacity: 0;
  -webkit-transform: scale(10) rotate(-30deg);
  transform: scale(10) rotate(-30deg);
  transition: all 0.5s ease-in 0s;
  span {
    position: absolute;
    width: 2em;
    font-weight: bold;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}
input:checked ~ .stamp-box > .test {
  visibility: visible;
  opacity: 1;
  -webkit-transform: scale(1) rotate(0deg);
  transform: scale(1) rotate(0deg);
}

// アイコンやタグの設置
ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
h1 {
  text-align: center;
  margin: 16px 0;
}
.block {
  border: 1px solid;
  width: 640px;
  margin: auto;
  &-wrap {
    overflow: hidden;
    padding: 48px;
  }
  &-tag {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    float: left;
    width: 70%;
    li {
      background-color: cornflowerblue;
      color: #fff;
      padding: 5px 15px;
      border-radius: 20px;
      margin: 0 8px 8px 0;
    }
  }
  &-icon {
    display: flex;
    justify-content: flex-end;
    float: right;
    width: 30%;
    li {
      font-size: 30px;
      margin-right: 12px;
      &:last-child {
        margin-right: 0;
      }
    }
  }
}

// チェックボックスのカスタム
.checkbox {
  text-align: center;
  color: #79808a;
  margin-top: 60px;
  &-input {
    display: none;
  }
  &-parts {
    position: relative;
    padding-left: 38px;
    cursor: pointer;
    &::before {
      content: "";
      display: block;
      position: absolute;
      top: -5px;
      left: 0;
      width: 23px;
      height: 23px;
      border: 2px solid #79808a;
      border-radius: 4px;
    }
  }
}
.checkbox-input:checked + .checkbox-parts::after {
  display: block;
  position: absolute;
  top: -2px;
  left: 13px;
  width: 11px;
  height: 19px;
  transform: rotate(40deg);
  border-right: 3px solid red;
  border-bottom: 3px solid red;
  content: "";
}
.checkbox-input:checked + .checkbox-parts::before {
  border: 2px solid red;
}

// フェーズ毎のアニメーションを実装
@keyframes movebox {
  25% {
    top: 0;
    left: 100%;
    transform: translateX(-100%);
  }
  50% {
    top: 100%;
    left: 100%;
    transform: translate(-100%, -100%);
  }
  75% {
    top: 100%;
    left: 0;
    transform: translateY(-100%);
  }
  100% {
    top: 0;
    left: 0;
  }
}
div {
  position: relative;
  width: 300px;
  height: 300px;
  border: 1px solid #8d8d8d;
  span {
    position: absolute;
    top: 0;
    left: 0;
    width: 100px;
    height: 100px;
    background-color: red;
    animation: movebox 5s linear 0s 1 forwards;
  }
} */
@keyframes spinbox {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(180deg);
  }
}

input[type="checkbox"] ~ label > div {
  width: 200px;
  height: 100px;
  border: 1px solid #000;
  background-color: red;
  animation: spinbox 1s linear 0s infinite forwards paused;
  margin-top: 100px;
}

input[type="checkbox"]:checked ~ label > div {
  width: 200px;
  height: 100px;
  border: 1px solid #000;
  background-color: red;
  animation: spinbox 1s linear 0s infinite forwards;
}

input {
  display: none;
}
